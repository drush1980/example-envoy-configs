# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This example can be used to enforce mTLS in front of your Apigee instance.
# You will need to do the following:
# a. replace the virtual host domain to match your desired name
# b. replace the host rewrite literal with your Apigee environment group domain name
# c. update certificate and key references as needed
# d. update the cluster address to point at your Apigee instance IP
# e. update the SNI string to match the certificate subject presented by your Apigee instance (can be obtained using the openssl s_client command)

admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9000

static_resources:
  listeners:
  - name: listener_https
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          access_log:
            - name: envoy.access_loggers.file
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                path: /tmp/access.log
          stat_prefix: ingress_http
          http_filters:
          - name: envoy.filters.http.router
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              # update to your domain
              domains: ["your-domain.com"]
              routes:
              - match:
                  prefix: "/"
                route:
                  # replace with your Apigee environment group hostname
                  host_rewrite_literal: your-apigee-environment-group-hostname.com
                  cluster: apigee
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          require_client_certificate: true
          common_tls_context:
            validation_context:
              trusted_ca:
                filename: /etc/envoy/ca.crt  # certificate authority used to sign the client certificate
            tls_certificates:
              certificate_chain:
                filename: /etc/envoy/server.crt
              private_key:
                filename: /etc/envoy/server.key

  clusters:
  - name: apigee
    connect_timeout: 2s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: apigee
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # replace with your Apigee instance IP
                address: 10.x.x.x
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        # use openssl s_client to get the sni value from your Apigee instance and replace here
        sni: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
